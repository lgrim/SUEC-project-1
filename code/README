Description of Project
    The goal of this project was to create a program that allows a user to
    convert an xml file of running or biking data, as generated by training
    peaks, to a pdf report that displays useful statistics, plots, etc.


Description of Dependencies
    - Python 3.6 is the interpreter originally used with this project
    - pdflatex, or latex will need to be installed on the computer.


Description of Directory Structure Requirements
    The following directories need to be present IN the current directory:
        - csv
        - histograms
        - images
        - plots
        - reports
        - tex
        - xml

    XML files from Training Peaks should be placed into the xml directory prior
    to trying to load them into the program.


Description of Code

Classes:

    ConvertXMLToCSV:

        Methods:

            XML_to_CSV:
                Keyword arguments:
                - input_file_name
                - output_file_name

                Default arguments:
                - is_running_file=True

                Output:
                - A csv file of the desired data
                The structure is as follows:
                - Heart Rate BPM, Speed, Cadence (run or bike), [bike files have power here]

                Description:
                - Turns the XML file into a CSV file

    LoadData:

        Methods:

            load_csv:
                Keyword arguments:
                - file_name

                Default Arguments:
                - NA

                Output:
                - A numpy array containing the data from the csv

                Description:
                - Loads the csv data into a numpy array

    StatisticsAndPlots:

        Methods:

            get_average_heart_rate, get_average_speed,
            get_average_cadence, get_average_power:
                Keyword arguments:
                - data (the numpy array of the training data as created
                        by load_csv)

            make_pace_histogram:
                Keyword arguments:
                - data (same as above)
                - date (with underscores)
                - athlete_name (with underscores for file names)

                Default Arguments:
                - NA

                Ouput:
                - Returns the name of the image created (string)

                Description:
                - Creates a histogram from the pace data, saves the file,
                    and returns the file's name as a string

            make_zone_histogram:
                Keyword arguments:
                - data (same as above)
                - date (with underscores)
                - athlete_name (with underscores for file names)

                Default Arguments:
                - NA

                Ouput:
                - Returns the name of the image created (string)

                Description:
                - Creates a histogram from the zone data, saves the file,
                    and returns the file's name as a string

            make_raw_plot:
                Keyword arguments:
                - data (same as above)
                - date (with underscores)
                - athlete_name (with underscores for file names)

                Default Arguments:
                - NA

                Ouput:
                - Returns the name of the image created (string)

                Description:
                - Plots the raw heart rate and speed values vs. time
                    on two separate plots that are stacked vertically

    GenerateReport:

        Methods:

            generate_report:

                General Description:
                    Loads the data, creates plots and retrieves statistics,
                    builds the tex file per the template Steve prescribed

            build_tex:

                General Description:
                    Handles writing the tex file from start to finish

            All other methods:

                General Description:
                    Create strings that represent various sections of the
                    report. The strings are for the tex file



Scripts:

    Main:

        General Description:
            Creates a Tk interface using Tkinter. Buttons in the GUI trigger
            the retrieval of values from the widgets, at which point all of
            code described above is executed and a report is generated.

Other:

    makefile:

        General Description:
            This file is called from the Main python script. It is used to
            typeset the generated tex file from within python. I could not
            directly call pdflatex using subprocess methods in python, but I
            was able to call make, so the pdflatex command is executed in the
            makefile. The file takes one argument, tex_file, which is the name
            of the tex file generated for the report.

        IMPORTANT NOTE:
            Within the makefile, the path to pdflatex on my machine is listed
            before the tex_file variable. This path will need to be adjusted
            based off of where pdflatex is installed on your machine.

