sample.mean <- function(x) {
if (length(x) == 0) {
print("Please input a non-empty vector.")
}
tempSum <- 0.0
for (i in 1:length(x)) {
tempSum <- tempSum + i
}
return (tempSum/length(x))
}
sample.mean(c(1, 2, 3, 4, 5))
# Compute the variance of a set of numbers. x is a vector
sample.variance <- function(x) {
tempSum <- 0
avg <- sample.mean(x)
for (i in x) {
tempSum <- tempSum + (i - avg)**2
}
return (tempSum/(length(x) - 1))
}
sample.mean(c(1, 2, 3, 4, 5))
sample.mean(c(1, 2, 3, 4, 5, 6))
sample.variance(c(1, 2, 3, 4, 5, 6))
sample.variance(c(1, 2, 3, 4, 5))
sample.variance(c(600, 470, 170, 430, 300))
# Compute the variance of a set of numbers. x is a vector
sample.variance <- function(x) {
tempSum <- 0
avg <- sample.mean(x)
for (i in x) {
tempSum <- tempSum + (i - avg)**2
}
return (tempSum/(length(x)))
}
sample.variance(c(600, 470, 170, 430, 300))
sample.variance <- function(x) {
tempSum <- 0
avg <- sample.mean(x)
for (i in x) {
tempSum <- tempSum + (i - avg)**2
}
return (tempSum/(length(x) - 1))
}
sample.variance(c(600, 470, 170, 430, 300))
sample.mean(c(600, 470, 170, 430, 300))
sample.variance <- function(x) {
tempSum <- 0
avg <- sample.mean(x)
for (i in x) {
print(i)
tempSum <- tempSum + (i - avg)**2
}
return (tempSum/(length(x) - 1))
}
sample.variance(c(600, 470, 170, 430, 300))
sample.mean <- function(x) {
if (length(x) == 0) {
print("Please input a non-empty vector.")
}
tempSum <- 0.0
for (i in x) {
print(i)
tempSum <- tempSum + i
}
return (tempSum/length(x))
}
sample.mean(c(600, 470, 170, 430, 300))
sample.variance(c(600, 470, 170, 430, 300))
# Compute the variance of a set of numbers. x is a vector
sample.variance <- function(x) {
tempSum <- 0
avg <- sample.mean(x)
for (i in x) {
#print(i)
tempSum <- tempSum + (i - avg)**2
}
return (tempSum/(length(x) - 1))
}
sample.variance(c(600, 470, 170, 430, 300))
# Compute the mean of a set of data. x is a vector
sample.mean <- function(x) {
if (length(x) == 0) {
print("Please input a non-empty vector.")
}
tempSum <- 0.0
for (i in x) {
#print(i)
tempSum <- tempSum + i
}
return (tempSum/length(x))
}
sample.variance(c(600, 470, 170, 430, 300))
# Compute the mean of a set of data. x is a vector
sample.mean <- function(x) {
if (length(x) == 0) {
print("Please input a non-empty vector.")
}
tempSum <- 0.0
for (i in x) {
#print(i)
tempSum <- tempSum + i
}
return (tempSum/length(x))
}
sample.mean(c(600, 470, 170, 430, 300))
# Compute the variance of a set of numbers. x is a vector
sample.variance <- function(x) {
tempSum <- 0
avg <- sample.mean(x)
for (i in x) {
#print(i)
tempSum <- tempSum + (i - avg)**2
}
return (tempSum/(length(x) - 1))
}
sample.variance(c(600, 470, 170, 430, 300))
sample.variance(c(1550, 1700, 900, 850, 1000, 950))
# Compute the variance of a set of numbers. x is a vector
sample.variance <- function(x) {
if (length(x) == 0) {
print("Please input a non-empty vector.")
}
tempSum <- 0
avg <- sample.mean(x)
for (i in x) {
tempSum <- tempSum + (i - avg)**2
}
return (tempSum/(length(x) - 1))
}
# Compute the mean of a set of data. x is a vector
sample.mean <- function(x) {
if (length(x) == 0) {
print("Please input a non-empty vector.")
}
tempSum <- 0.0
for (i in x) {
tempSum <- tempSum + i
}
return (tempSum/length(x))
}
sample.mean(c(15,2,44,21,40,20,19,18))
sample.variance(c(15,2,44,21,40,20,19,18))
# Equivalently
data$Ratio
# Compute the standard deviation of a data set using the variance function
sample.stddev <- function(x) {
return (sample.variance(x)**0.5)
}
sample.stddev(c(15,2,44,21,40,20,19,18))
setwd("Documents/GitHub/SUEC-project-1/code/")
ls()
ls
pwd()
getwd()
"Logan"[1]
"Logan"[1][1]
substring("Logan", 1, 2)
substring("Logan", 1, 1)
substring("Logan", 1, 1) == 'L'
"Logan" + "Grim"
paste("Logan", "Grim", 20)
paste("Logan", "Grim", 20, sep = "")
paste((if (isRunningFile) "running" else "biking"), "Pace_", args[2], ".png")
paste((if (TRUE) "running" else "biking"), "Pace_", args[2], ".png")
paste((if (TRUE) "running" else "biking"), "Pace_", "LoganGrim", ".png")
paste((if (TRUE) "running" else "biking"), "Pace_", "LoganGrim", ".png", sep = "")
library(ggplot2)
